name: generate-release

on:
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  platforms: linux/amd64,linux/arm64

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        type: [ local, external ]

    permissions:
      contents: read
      packages: write

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Extract metadata (tags, labels) for Docker
        id: tagging
        uses: HackerHappyHour/tagging-strategy@v3
        with:
          image_name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tag_name: ${{ github.event.release.tag_name }}
          tags: |
            %X%-${{ matrix.type}}
            %X.Y%-${{ matrix.type}}
            %X.Y.Z%-${{ matrix.type}}
          extra_tags: |
            latest::${{ matrix.type == 'external'}}
            %X%::${{ matrix.type == 'external'}}
            %X.Y%::${{ matrix.type == 'external'}}
            %X.Y.Z%::${{ matrix.type == 'external'}} 

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.${{ matrix.type }}
          platforms: ${{ env.platforms }}
          push: true
          tags: |
            ${{ steps.tagging.outputs.tags }}
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Version output
        id: version
        run: echo "version=${{ steps.meta.outputs.version }}" >> "$GITHUB_OUTPUT"
